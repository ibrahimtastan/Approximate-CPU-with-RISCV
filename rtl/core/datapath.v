// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module datapath (
        ap_clk,
        ap_rst,
        ap_start,
        approx_level_add,
        approx_level_sub,
        approx_level_mul,
        ap_done,
        ap_idle,
        ap_ready,
        PC,
        ap_return
);

parameter    ap_ST_fsm_state1 = 99'd1;
parameter    ap_ST_fsm_state2 = 99'd2;
parameter    ap_ST_fsm_state3 = 99'd4;
parameter    ap_ST_fsm_state4 = 99'd8;
parameter    ap_ST_fsm_state5 = 99'd16;
parameter    ap_ST_fsm_state6 = 99'd32;
parameter    ap_ST_fsm_state7 = 99'd64;
parameter    ap_ST_fsm_state8 = 99'd128;
parameter    ap_ST_fsm_state9 = 99'd256;
parameter    ap_ST_fsm_state10 = 99'd512;
parameter    ap_ST_fsm_state11 = 99'd1024;
parameter    ap_ST_fsm_state12 = 99'd2048;
parameter    ap_ST_fsm_state13 = 99'd4096;
parameter    ap_ST_fsm_state14 = 99'd8192;
parameter    ap_ST_fsm_state15 = 99'd16384;
parameter    ap_ST_fsm_state16 = 99'd32768;
parameter    ap_ST_fsm_state17 = 99'd65536;
parameter    ap_ST_fsm_state18 = 99'd131072;
parameter    ap_ST_fsm_state19 = 99'd262144;
parameter    ap_ST_fsm_state20 = 99'd524288;
parameter    ap_ST_fsm_state21 = 99'd1048576;
parameter    ap_ST_fsm_state22 = 99'd2097152;
parameter    ap_ST_fsm_state23 = 99'd4194304;
parameter    ap_ST_fsm_state24 = 99'd8388608;
parameter    ap_ST_fsm_state25 = 99'd16777216;
parameter    ap_ST_fsm_state26 = 99'd33554432;
parameter    ap_ST_fsm_state27 = 99'd67108864;
parameter    ap_ST_fsm_state28 = 99'd134217728;
parameter    ap_ST_fsm_state29 = 99'd268435456;
parameter    ap_ST_fsm_state30 = 99'd536870912;
parameter    ap_ST_fsm_state31 = 99'd1073741824;
parameter    ap_ST_fsm_state32 = 99'd2147483648;
parameter    ap_ST_fsm_state33 = 99'd4294967296;
parameter    ap_ST_fsm_state34 = 99'd8589934592;
parameter    ap_ST_fsm_state35 = 99'd17179869184;
parameter    ap_ST_fsm_state36 = 99'd34359738368;
parameter    ap_ST_fsm_state37 = 99'd68719476736;
parameter    ap_ST_fsm_state38 = 99'd137438953472;
parameter    ap_ST_fsm_state39 = 99'd274877906944;
parameter    ap_ST_fsm_state40 = 99'd549755813888;
parameter    ap_ST_fsm_state41 = 99'd1099511627776;
parameter    ap_ST_fsm_state42 = 99'd2199023255552;
parameter    ap_ST_fsm_state43 = 99'd4398046511104;
parameter    ap_ST_fsm_state44 = 99'd8796093022208;
parameter    ap_ST_fsm_state45 = 99'd17592186044416;
parameter    ap_ST_fsm_state46 = 99'd35184372088832;
parameter    ap_ST_fsm_state47 = 99'd70368744177664;
parameter    ap_ST_fsm_state48 = 99'd140737488355328;
parameter    ap_ST_fsm_state49 = 99'd281474976710656;
parameter    ap_ST_fsm_state50 = 99'd562949953421312;
parameter    ap_ST_fsm_state51 = 99'd1125899906842624;
parameter    ap_ST_fsm_state52 = 99'd2251799813685248;
parameter    ap_ST_fsm_state53 = 99'd4503599627370496;
parameter    ap_ST_fsm_state54 = 99'd9007199254740992;
parameter    ap_ST_fsm_state55 = 99'd18014398509481984;
parameter    ap_ST_fsm_state56 = 99'd36028797018963968;
parameter    ap_ST_fsm_state57 = 99'd72057594037927936;
parameter    ap_ST_fsm_state58 = 99'd144115188075855872;
parameter    ap_ST_fsm_state59 = 99'd288230376151711744;
parameter    ap_ST_fsm_state60 = 99'd576460752303423488;
parameter    ap_ST_fsm_state61 = 99'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 99'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 99'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 99'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 99'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 99'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 99'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 99'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 99'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 99'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 99'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 99'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 99'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 99'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 99'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 99'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 99'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 99'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 99'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 99'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 99'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 99'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 99'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 99'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 99'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 99'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 99'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 99'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 99'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 99'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 99'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 99'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 99'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 99'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 99'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 99'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 99'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 99'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 99'd316912650057057350374175801344;

input   ap_clk;
input   ap_rst;
input   ap_start;
input  [2:0] approx_level_add;
input  [2:0] approx_level_sub;
input  [2:0] approx_level_mul;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] PC;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [98:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] inst_mem_address0;
reg    inst_mem_ce0;
wire   [31:0] inst_mem_q0;
reg   [4:0] rf_address0;
reg    rf_ce0;
reg    rf_we0;
reg   [31:0] rf_d0;
wire  signed [31:0] rf_q0;
reg   [4:0] rf_address1;
reg    rf_ce1;
reg    rf_we1;
reg   [31:0] rf_d1;
wire  signed [31:0] rf_q1;
reg   [16:0] mem_address0;
reg    mem_ce0;
reg    mem_we0;
reg   [7:0] mem_d0;
wire   [7:0] mem_q0;
reg   [16:0] mem_address1;
reg    mem_ce1;
reg    mem_we1;
reg   [7:0] mem_d1;
wire   [7:0] mem_q1;
wire   [31:0] grp_fu_556_p2;
reg   [31:0] reg_583;
wire    ap_CS_fsm_state3;
reg   [6:0] Opcode_reg_1533;
reg   [6:0] tmp_1_reg_1567;
wire   [0:0] tmp_2_fu_686_p2;
wire   [0:0] grp_fu_528_p3;
wire   [31:0] grp_alu_fu_501_ap_return;
reg   [31:0] reg_588;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state92;
reg   [31:0] instruction_reg_1520;
wire    ap_CS_fsm_state2;
wire   [6:0] Opcode_fu_609_p1;
reg   [4:0] Rd_reg_1537;
reg   [2:0] imm3_reg_1552;
reg   [11:0] tmp_36_cast_reg_1562;
wire  signed [31:0] i_imm_fu_683_p1;
reg  signed [31:0] i_imm_reg_1584;
reg   [31:0] op_1_reg_1591;
reg  signed [31:0] op_2_reg_1610;
reg   [0:0] tmp_2_reg_1633;
wire   [31:0] jal_imm_3_fu_750_p3;
wire   [0:0] rev3_fu_768_p2;
wire   [0:0] grp_fu_535_p2;
wire   [0:0] rev2_fu_774_p2;
wire   [0:0] grp_fu_541_p2;
wire   [0:0] not_2_i_fu_780_p2;
wire   [0:0] tmp_i5_fu_786_p2;
wire   [31:0] addr_assign_fu_802_p2;
reg   [31:0] addr_assign_reg_1674;
wire  signed [31:0] addr_s_fu_808_p2;
reg  signed [31:0] addr_s_reg_1681;
wire   [6:0] imm7_fu_827_p3;
reg   [6:0] imm7_reg_1688;
wire   [31:0] res_fu_834_p2;
reg   [31:0] res_reg_1693;
reg   [0:0] tmp_25_reg_1704;
wire   [31:0] pc_amount_2_fu_874_p2;
wire    ap_CS_fsm_state4;
wire  signed [31:0] pc_amount_3_fu_967_p1;
wire    ap_CS_fsm_state5;
wire   [0:0] ap_phi_mux_ret_6_i_phi_fu_393_p12;
wire   [31:0] addr_assign_1_fu_1045_p2;
reg   [31:0] addr_assign_1_reg_1718;
wire    ap_CS_fsm_state9;
reg   [7:0] mem_load_reg_1734;
wire    ap_CS_fsm_state10;
reg   [7:0] mem_load_1_reg_1740;
wire   [0:0] sel_tmp4_i_fu_1127_p2;
reg   [0:0] sel_tmp4_i_reg_1755;
wire   [0:0] sel_tmp8_i_fu_1132_p2;
reg   [0:0] sel_tmp8_i_reg_1760;
wire   [31:0] newSel_fu_1157_p3;
reg   [31:0] newSel_reg_1766;
wire   [15:0] newSel4_fu_1179_p3;
reg   [15:0] newSel4_reg_1771;
wire   [31:0] res_7_fu_1249_p3;
reg   [31:0] res_7_reg_1776;
wire    ap_CS_fsm_state14;
wire   [31:0] res_8_fu_1262_p3;
reg   [31:0] res_8_reg_1781;
wire   [7:0] approx_mul_size_op1_fu_1293_p3;
reg   [7:0] approx_mul_size_op1_reg_1786;
wire   [7:0] approx_mul_size_op2_fu_1325_p3;
reg   [7:0] approx_mul_size_op2_reg_1791;
wire   [31:0] res_9_fu_1375_p3;
reg   [31:0] res_9_reg_1796;
wire    ap_CS_fsm_state16;
wire    grp_approx_mul_fu_509_ap_idle;
wire    grp_approx_mul_fu_509_ap_ready;
wire    grp_approx_mul_fu_509_ap_done;
wire   [31:0] grp_fu_840_p2;
wire    ap_CS_fsm_state53;
wire   [31:0] grp_fu_846_p2;
wire    ap_CS_fsm_state88;
reg   [0:0] tmp_36_reg_1811;
wire    ap_CS_fsm_state89;
wire   [31:0] ret_fu_1399_p2;
reg   [31:0] ret_reg_1816;
wire   [31:0] ret_6_fu_1403_p3;
wire    ap_CS_fsm_state90;
wire   [31:0] grp_approx_add_fu_517_ap_return;
wire    ap_CS_fsm_state95;
wire    grp_approx_add_fu_517_ap_idle;
wire    grp_approx_add_fu_517_ap_ready;
wire    grp_approx_add_fu_517_ap_done;
wire   [7:0] approx_add_size_fu_1495_p3;
reg   [7:0] approx_add_size_reg_1831;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state98;
wire    grp_alu_fu_501_ap_ready;
reg   [31:0] grp_alu_fu_501_op_2;
reg   [6:0] grp_alu_fu_501_func7;
wire    grp_approx_mul_fu_509_ap_start;
wire   [31:0] grp_approx_mul_fu_509_ap_return;
wire    grp_approx_add_fu_517_ap_start;
reg   [31:0] grp_approx_add_fu_517_b;
reg   [7:0] grp_approx_add_fu_517_approx_add_size;
reg   [0:0] grp_approx_add_fu_517_add_sub;
reg   [0:0] ret_6_i_reg_390;
reg   [31:0] ret1_i_reg_407;
wire    ap_CS_fsm_state17;
reg   [31:0] ret4_i_reg_419;
wire   [0:0] grp_fu_562_p2;
reg   [31:0] ap_phi_mux_pc_amount_1_phi_fu_449_p24;
reg   [31:0] pc_amount_1_reg_445;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state91;
reg   [31:0] ret_1_i_reg_484;
reg    grp_approx_mul_fu_509_ap_start_reg;
wire    ap_CS_fsm_state15;
reg    grp_approx_add_fu_517_ap_start_reg;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state97;
wire   [63:0] tmp_s_fu_604_p1;
wire   [63:0] tmp_8_fu_673_p1;
wire   [63:0] tmp_9_fu_678_p1;
wire   [63:0] tmp_21_fu_764_p1;
wire   [63:0] tmp_13_fu_823_p1;
wire   [63:0] tmp_6_fu_866_p1;
wire   [63:0] tmp_24_fu_885_p1;
wire  signed [63:0] tmp_8_i_fu_975_p1;
wire    ap_CS_fsm_state6;
wire  signed [63:0] tmp_13_i_fu_979_p1;
wire  signed [63:0] tmp_17_i_fu_999_p1;
wire  signed [63:0] tmp_21_i_fu_1019_p1;
wire  signed [63:0] tmp_2_i_fu_1028_p1;
wire    ap_CS_fsm_state8;
wire  signed [63:0] tmp_6_i_fu_1032_p1;
wire  signed [63:0] tmp_9_i_fu_1041_p1;
wire  signed [63:0] tmp_i6_fu_1055_p1;
wire  signed [63:0] tmp_2_i9_fu_1066_p1;
wire  signed [63:0] tmp_7_i1_fu_1092_p1;
wire  signed [63:0] tmp_11_i2_fu_1102_p1;
wire   [63:0] tmp_14_fu_1234_p1;
wire   [63:0] tmp_10_fu_1238_p1;
wire   [63:0] tmp_29_fu_1383_p1;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_40_fu_1410_p1;
wire   [63:0] tmp_28_fu_1414_p1;
wire    ap_CS_fsm_state93;
wire   [63:0] tmp_41_fu_1503_p1;
wire    ap_CS_fsm_state99;
wire   [31:0] tmp_18_fu_758_p2;
wire   [31:0] tmp_12_fu_814_p3;
wire   [31:0] tmp_5_fu_860_p2;
wire   [31:0] tmp_23_fu_879_p2;
wire   [31:0] ret_5_fu_1225_p3;
wire   [7:0] tmp_32_fu_971_p1;
wire   [7:0] tmp_31_fu_1024_p1;
wire   [7:0] tmp_26_fu_1037_p1;
reg  signed [31:0] grp_fu_535_p0;
reg  signed [31:0] grp_fu_535_p1;
wire  signed [31:0] grp_fu_541_p0;
wire  signed [31:0] grp_fu_541_p1;
wire  signed [31:0] grp_fu_556_p1;
reg  signed [31:0] grp_fu_562_p0;
wire   [29:0] tmp_fu_594_p4;
wire   [4:0] Rs1_fu_633_p4;
wire   [4:0] Rs2_fu_653_p4;
wire   [7:0] tmp_16_fu_700_p4;
wire   [0:0] tmp_20_fu_709_p3;
wire   [9:0] tmp_22_cast_fu_691_p4;
wire   [20:0] jal_imm_fu_716_p6;
wire   [31:0] jal_imm_1_fu_734_p7;
wire   [31:0] jal_imm_cast_fu_730_p1;
wire  signed [31:0] not_2_i_fu_780_p0;
wire  signed [31:0] not_2_i_fu_780_p1;
wire  signed [31:0] tmp_i5_fu_786_p0;
wire  signed [31:0] tmp_i5_fu_786_p1;
wire   [11:0] tmp_15_fu_792_p3;
wire  signed [31:0] addr_assign_fu_802_p0;
wire  signed [31:0] s_imm_fu_798_p1;
wire   [19:0] grp_fu_547_p4;
wire  signed [31:0] res_fu_834_p1;
wire   [31:0] tmp_4_fu_852_p3;
wire   [31:0] tmp_22_fu_870_p2;
wire   [0:0] tmp_46_fu_907_p3;
wire   [5:0] tmp_30_fu_898_p4;
wire   [3:0] tmp_8_i1_cast_fu_889_p4;
wire   [11:0] imm16_fu_914_p5;
wire   [0:0] tmp_48_fu_926_p3;
wire   [14:0] tmp_34_fu_937_p6;
wire   [14:0] tmp_33_fu_933_p1;
wire   [14:0] tmp_35_fu_951_p3;
wire   [15:0] imm16_1_fu_959_p3;
wire   [31:0] grp_fu_578_p2;
wire   [31:0] tmp_16_i_fu_994_p2;
wire   [31:0] tmp_20_i_fu_1014_p2;
wire   [31:0] addr_s_1_fu_1049_p2;
wire   [31:0] tmp_1_i8_fu_1060_p2;
wire   [15:0] tmp_i1_fu_1075_p3;
wire   [31:0] tmp_6_i1_fu_1087_p2;
wire   [31:0] tmp_10_i2_fu_1097_p2;
wire   [0:0] tmp_17_fu_1137_p3;
wire   [0:0] rev1_fu_1145_p2;
wire   [0:0] sel_tmp13_i_fu_1151_p2;
wire   [31:0] ret_2_fu_1083_p1;
wire   [31:0] ret_4_fu_1107_p4;
wire   [0:0] sel_tmp2_i_fu_1122_p2;
wire   [15:0] ret_i7_cast_fu_1071_p1;
wire   [0:0] sel_tmp_i1_fu_1117_p2;
wire   [0:0] or_cond1_fu_1173_p2;
wire   [15:0] newSel2_fu_1165_p3;
wire   [31:0] ret_1_fu_1187_p1;
wire   [31:0] ret_3_fu_1190_p5;
wire   [31:0] newSel1_fu_1200_p3;
wire   [0:0] or_cond_fu_1207_p2;
wire   [0:0] or_cond2_fu_1217_p2;
wire   [31:0] newSel3_fu_1211_p3;
wire   [31:0] newSel45_cast_fu_1222_p1;
wire   [0:0] tmp_37_fu_1242_p3;
wire   [0:0] tmp_38_fu_1255_p3;
reg   [31:0] tmp_i_i_i_fu_1275_p3;
wire   [7:0] tmp_42_fu_1283_p1;
wire   [0:0] tmp_i4_i_i_fu_1269_p2;
wire   [7:0] phitmp_op_fu_1287_p2;
reg   [31:0] tmp_i6_i_i_fu_1307_p3;
wire   [7:0] tmp_43_fu_1315_p1;
wire   [0:0] tmp_i5_i_i_fu_1301_p2;
wire   [7:0] phitmp1_op_fu_1319_p2;
wire   [31:0] tmp_6_i_i_fu_1333_p2;
wire   [31:0] tmp_8_i_i_fu_1345_p2;
wire   [0:0] tmp_45_fu_1349_p3;
wire   [0:0] tmp_44_fu_1337_p3;
wire   [0:0] rev_fu_1357_p2;
wire   [0:0] or_cond_i_i_fu_1363_p2;
wire   [31:0] res_5_fu_1369_p2;
wire   [31:0] tmp_i_fu_1387_p2;
wire   [0:0] sel_tmp_i_fu_1437_p2;
reg   [31:0] tmp_i_i3_fu_1423_p3;
reg   [31:0] tmp_i2_i_fu_1430_p3;
wire   [0:0] sel_tmp1_i_fu_1443_p2;
wire   [7:0] tmp_49_fu_1449_p1;
wire   [7:0] tmp_50_fu_1453_p1;
wire   [0:0] tmp_i1_i_fu_1418_p2;
wire   [0:0] sel_tmp5_i_fu_1471_p2;
wire   [7:0] tmp_51_fu_1457_p3;
wire   [0:0] sel_tmp6_i_fu_1477_p2;
wire   [0:0] sel_tmp3_i_fu_1465_p2;
wire   [0:0] tmp_39_fu_1489_p2;
wire   [7:0] p_op8_i_fu_1483_p2;
reg    grp_fu_840_ap_start;
wire    grp_fu_840_ap_done;
reg    grp_fu_846_ap_start;
wire    grp_fu_846_ap_done;
reg   [31:0] ap_return_preg;
reg   [98:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 99'd1;
#0 grp_approx_mul_fu_509_ap_start_reg = 1'b0;
#0 grp_approx_add_fu_517_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

datapath_inst_mem #(
    .DataWidth( 32 ),
    .AddressRange( 599 ),
    .AddressWidth( 10 ))
inst_mem_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inst_mem_address0),
    .ce0(inst_mem_ce0),
    .q0(inst_mem_q0)
);

datapath_rf #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rf_address0),
    .ce0(rf_ce0),
    .we0(rf_we0),
    .d0(rf_d0),
    .q0(rf_q0),
    .address1(rf_address1),
    .ce1(rf_ce1),
    .we1(rf_we1),
    .d1(rf_d1),
    .q1(rf_q1)
);

datapath_mem #(
    .DataWidth( 8 ),
    .AddressRange( 92160 ),
    .AddressWidth( 17 ))
mem_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_address0),
    .ce0(mem_ce0),
    .we0(mem_we0),
    .d0(mem_d0),
    .q0(mem_q0),
    .address1(mem_address1),
    .ce1(mem_ce1),
    .we1(mem_we1),
    .d1(mem_d1),
    .q1(mem_q1)
);

alu grp_alu_fu_501(
    .ap_ready(grp_alu_fu_501_ap_ready),
    .op_1(op_1_reg_1591),
    .op_2(grp_alu_fu_501_op_2),
    .ftype(imm3_reg_1552),
    .func7(grp_alu_fu_501_func7),
    .ap_return(grp_alu_fu_501_ap_return)
);

approx_mul grp_approx_mul_fu_509(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_approx_mul_fu_509_ap_start),
    .ap_done(grp_approx_mul_fu_509_ap_done),
    .ap_idle(grp_approx_mul_fu_509_ap_idle),
    .ap_ready(grp_approx_mul_fu_509_ap_ready),
    .opA(res_7_reg_1776),
    .opB(res_8_reg_1781),
    .size_op1(approx_mul_size_op1_reg_1786),
    .size_op2(approx_mul_size_op2_reg_1791),
    .approx_level_mul(approx_level_mul),
    .ap_return(grp_approx_mul_fu_509_ap_return)
);

approx_add grp_approx_add_fu_517(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_approx_add_fu_517_ap_start),
    .ap_done(grp_approx_add_fu_517_ap_done),
    .ap_idle(grp_approx_add_fu_517_ap_idle),
    .ap_ready(grp_approx_add_fu_517_ap_ready),
    .a(op_1_reg_1591),
    .b(grp_approx_add_fu_517_b),
    .approx_add_size(grp_approx_add_fu_517_approx_add_size),
    .add_sub(grp_approx_add_fu_517_add_sub),
    .approx_level_add(approx_level_add),
    .approx_level_sub(approx_level_sub),
    .ap_return(grp_approx_add_fu_517_ap_return)
);

riscv_core_sdiv_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
riscv_core_sdiv_3bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_840_ap_start),
    .done(grp_fu_840_ap_done),
    .din0(rf_q0),
    .din1(rf_q1),
    .ce(1'b1),
    .dout(grp_fu_840_p2)
);

riscv_core_udiv_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
riscv_core_udiv_3cud_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_846_ap_start),
    .done(grp_fu_846_ap_done),
    .din0(rf_q0),
    .din1(rf_q1),
    .ce(1'b1),
    .dout(grp_fu_846_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state91)) begin
            ap_return_preg <= ap_phi_mux_pc_amount_1_phi_fu_449_p24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_approx_add_fu_517_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state94))) begin
            grp_approx_add_fu_517_ap_start_reg <= 1'b1;
        end else if ((grp_approx_add_fu_517_ap_ready == 1'b1)) begin
            grp_approx_add_fu_517_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_approx_mul_fu_509_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_approx_mul_fu_509_ap_start_reg <= 1'b1;
        end else if ((grp_approx_mul_fu_509_ap_ready == 1'b1)) begin
            grp_approx_mul_fu_509_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (ap_phi_mux_ret_6_i_phi_fu_393_p12 == 1'd1))) begin
        pc_amount_1_reg_445 <= pc_amount_3_fu_967_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | ((ap_phi_mux_ret_6_i_phi_fu_393_p12 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ap_CS_fsm_state91) & (7'd51 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state3) & (((imm3_reg_1552 == 3'd3) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd2) & (7'd99 == Opcode_reg_1533)))) | (~(7'd3 == Opcode_reg_1533) & ~(7'd103 == Opcode_reg_1533) & ~(7'd23 == Opcode_reg_1533) & ~(7'd55 == Opcode_reg_1533) & ~(7'd19 == Opcode_reg_1533) & ~(7'd35 == Opcode_reg_1533) & ~(7'd99 == Opcode_reg_1533) & ~(7'd111 == Opcode_reg_1533) & ~(7'd51 == Opcode_reg_1533) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state3) & (7'd23 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state3) & (7'd55 == Opcode_reg_1533)))) begin
        pc_amount_1_reg_445 <= 32'd4;
    end else if (((1'b1 == ap_CS_fsm_state3) & (7'd111 == Opcode_reg_1533))) begin
        pc_amount_1_reg_445 <= jal_imm_3_fu_750_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        pc_amount_1_reg_445 <= pc_amount_2_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_686_p2 == 1'd0) & (tmp_1_reg_1567 == 7'd65) & (7'd51 == Opcode_reg_1533))) begin
        ret1_i_reg_407 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        ret1_i_reg_407 <= res_9_reg_1796;
    end
end

always @ (posedge ap_clk) begin
    if (((imm3_reg_1552 == 3'd5) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_562_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))) begin
        ret4_i_reg_419 <= 32'd4294967295;
    end else if (((imm3_reg_1552 == 3'd4) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_562_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))) begin
        ret4_i_reg_419 <= 32'd2147483647;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        ret4_i_reg_419 <= grp_fu_846_p2;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ret4_i_reg_419 <= grp_fu_840_p2;
    end else if (((imm3_reg_1552 == 3'd0) & (1'b1 == ap_CS_fsm_state90))) begin
        ret4_i_reg_419 <= ret_reg_1816;
    end else if (((imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state90))) begin
        ret4_i_reg_419 <= ret_6_fu_1403_p3;
    end else if ((~(imm3_reg_1552 == 3'd0) & ~(imm3_reg_1552 == 3'd1) & ~(imm3_reg_1552 == 3'd4) & ~(imm3_reg_1552 == 3'd5) & (1'b1 == ap_CS_fsm_state3) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))) begin
        ret4_i_reg_419 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_approx_add_fu_517_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state98)) | ((grp_approx_add_fu_517_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state95)))) begin
        ret_1_i_reg_484 <= grp_approx_add_fu_517_ap_return;
    end else if (((~(tmp_1_reg_1567 == 7'd1) & ~(tmp_1_reg_1567 == 7'd65) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_528_p3 == 1'd1) & (tmp_2_fu_686_p2 == 1'd0) & (7'd51 == Opcode_reg_1533)) | (~(tmp_1_reg_1567 == 7'd64) & ~(tmp_1_reg_1567 == 7'd1) & ~(tmp_1_reg_1567 == 7'd96) & ~(tmp_1_reg_1567 == 7'd65) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_528_p3 == 1'd1) & (tmp_2_fu_686_p2 == 1'd1) & (7'd51 == Opcode_reg_1533)))) begin
        ret_1_i_reg_484 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (7'd99 == Opcode_reg_1533))) begin
        if ((imm3_reg_1552 == 3'd0)) begin
            ret_6_i_reg_390 <= tmp_i5_fu_786_p2;
        end else if ((imm3_reg_1552 == 3'd1)) begin
            ret_6_i_reg_390 <= not_2_i_fu_780_p2;
        end else if ((imm3_reg_1552 == 3'd4)) begin
            ret_6_i_reg_390 <= grp_fu_541_p2;
        end else if ((imm3_reg_1552 == 3'd5)) begin
            ret_6_i_reg_390 <= rev2_fu_774_p2;
        end else if ((imm3_reg_1552 == 3'd6)) begin
            ret_6_i_reg_390 <= grp_fu_535_p2;
        end else if ((imm3_reg_1552 == 3'd7)) begin
            ret_6_i_reg_390 <= rev3_fu_768_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Opcode_reg_1533 <= Opcode_fu_609_p1;
        Rd_reg_1537 <= {{inst_mem_q0[11:7]}};
        imm3_reg_1552 <= {{inst_mem_q0[14:12]}};
        instruction_reg_1520 <= inst_mem_q0;
        tmp_1_reg_1567 <= {{inst_mem_q0[31:25]}};
        tmp_36_cast_reg_1562 <= {{inst_mem_q0[31:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        addr_assign_1_reg_1718 <= addr_assign_1_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (7'd35 == Opcode_reg_1533))) begin
        addr_assign_reg_1674 <= addr_assign_fu_802_p2;
        addr_s_reg_1681 <= addr_s_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        approx_add_size_reg_1831 <= approx_add_size_fu_1495_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        approx_mul_size_op1_reg_1786 <= approx_mul_size_op1_fu_1293_p3;
        approx_mul_size_op2_reg_1791 <= approx_mul_size_op2_fu_1325_p3;
        res_7_reg_1776 <= res_7_fu_1249_p3;
        res_8_reg_1781 <= res_8_fu_1262_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_imm_reg_1584 <= i_imm_fu_683_p1;
        op_1_reg_1591 <= rf_q0;
        op_2_reg_1610 <= rf_q1;
        tmp_2_reg_1633 <= tmp_2_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (7'd19 == Opcode_reg_1533))) begin
        imm7_reg_1688 <= imm7_fu_827_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mem_load_1_reg_1740 <= mem_q0;
        mem_load_reg_1734 <= mem_q1;
        newSel4_reg_1771 <= newSel4_fu_1179_p3;
        newSel_reg_1766 <= newSel_fu_1157_p3;
        sel_tmp4_i_reg_1755 <= sel_tmp4_i_fu_1127_p2;
        sel_tmp8_i_reg_1760 <= sel_tmp8_i_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (grp_fu_528_p3 == 1'd1) & (tmp_2_fu_686_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd96) & (7'd51 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_686_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd65) & (7'd51 == Opcode_reg_1533)))) begin
        reg_583 <= grp_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_588 <= grp_alu_fu_501_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_approx_mul_fu_509_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        res_9_reg_1796 <= res_9_fu_1375_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_686_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd65) & (7'd51 == Opcode_reg_1533))) begin
        res_reg_1693 <= res_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((imm3_reg_1552 == 3'd0) & (1'b1 == ap_CS_fsm_state89))) begin
        ret_reg_1816 <= ret_fu_1399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_1_reg_1567 == 7'd1) & ~(tmp_1_reg_1567 == 7'd65) & (1'b1 == ap_CS_fsm_state3) & (7'd51 == Opcode_reg_1533))) begin
        tmp_25_reg_1704 <= instruction_reg_1520[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state89))) begin
        tmp_36_reg_1811 <= tmp_i_fu_1387_p2[32'd31];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) & (7'd51 == Opcode_reg_1533))) begin
        ap_phi_mux_pc_amount_1_phi_fu_449_p24 = 32'd4;
    end else begin
        ap_phi_mux_pc_amount_1_phi_fu_449_p24 = pc_amount_1_reg_445;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        ap_return = ap_phi_mux_pc_amount_1_phi_fu_449_p24;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_alu_fu_501_func7 = tmp_1_reg_1567;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_alu_fu_501_func7 = imm7_reg_1688;
    end else begin
        grp_alu_fu_501_func7 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_alu_fu_501_op_2 = op_2_reg_1610;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_alu_fu_501_op_2 = i_imm_reg_1584;
    end else begin
        grp_alu_fu_501_op_2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_approx_add_fu_517_add_sub = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_approx_add_fu_517_add_sub = 1'd1;
    end else begin
        grp_approx_add_fu_517_add_sub = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_approx_add_fu_517_approx_add_size = approx_add_size_reg_1831;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_approx_add_fu_517_approx_add_size = 8'd32;
    end else begin
        grp_approx_add_fu_517_approx_add_size = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_approx_add_fu_517_b = op_2_reg_1610;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_approx_add_fu_517_b = reg_583;
    end else begin
        grp_approx_add_fu_517_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_535_p0 = op_1_reg_1591;
    end else if ((((imm3_reg_1552 == 3'd6) & (1'b1 == ap_CS_fsm_state3) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd7) & (1'b1 == ap_CS_fsm_state3) & (7'd99 == Opcode_reg_1533)))) begin
        grp_fu_535_p0 = rf_q0;
    end else begin
        grp_fu_535_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_535_p1 = op_2_reg_1610;
    end else if ((((imm3_reg_1552 == 3'd6) & (1'b1 == ap_CS_fsm_state3) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd7) & (1'b1 == ap_CS_fsm_state3) & (7'd99 == Opcode_reg_1533)))) begin
        grp_fu_535_p1 = rf_q1;
    end else begin
        grp_fu_535_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_562_p0 = op_2_reg_1610;
    end else if ((((imm3_reg_1552 == 3'd4) & (1'b1 == ap_CS_fsm_state3) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd5) & (1'b1 == ap_CS_fsm_state3) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533)))) begin
        grp_fu_562_p0 = rf_q1;
    end else begin
        grp_fu_562_p0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_fu_562_p2 == 1'd0) & (imm3_reg_1552 == 3'd4) & (1'b1 == ap_CS_fsm_state3) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))) begin
        grp_fu_840_ap_start = 1'b1;
    end else begin
        grp_fu_840_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((grp_fu_562_p2 == 1'd0) & (imm3_reg_1552 == 3'd5) & (1'b1 == ap_CS_fsm_state3) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))) begin
        grp_fu_846_ap_start = 1'b1;
    end else begin
        grp_fu_846_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        inst_mem_ce0 = 1'b1;
    end else begin
        inst_mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mem_address0 = tmp_11_i2_fu_1102_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        mem_address0 = tmp_2_i9_fu_1066_p1;
    end else if (((imm3_reg_1552 == 3'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        mem_address0 = tmp_9_i_fu_1041_p1;
    end else if (((imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        mem_address0 = tmp_2_i_fu_1028_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        mem_address0 = tmp_17_i_fu_999_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mem_address0 = tmp_8_i_fu_975_p1;
    end else begin
        mem_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mem_address1 = tmp_7_i1_fu_1092_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        mem_address1 = tmp_i6_fu_1055_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        mem_address1 = tmp_6_i_fu_1032_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        mem_address1 = tmp_21_i_fu_1019_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mem_address1 = tmp_13_i_fu_979_p1;
    end else begin
        mem_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | ((imm3_reg_1552 == 3'd0) & (1'b1 == ap_CS_fsm_state8)) | ((imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        mem_ce0 = 1'b1;
    end else begin
        mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        mem_ce1 = 1'b1;
    end else begin
        mem_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((imm3_reg_1552 == 3'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        mem_d0 = tmp_26_fu_1037_p1;
    end else if (((imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        mem_d0 = tmp_31_fu_1024_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        mem_d0 = {{op_2_reg_1610[23:16]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mem_d0 = tmp_32_fu_971_p1;
    end else begin
        mem_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mem_d1 = {{op_2_reg_1610[31:24]}};
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        mem_d1 = {{op_2_reg_1610[15:8]}};
    end else begin
        mem_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((imm3_reg_1552 == 3'd2) & (1'b1 == ap_CS_fsm_state7)) | ((imm3_reg_1552 == 3'd0) & (1'b1 == ap_CS_fsm_state8)) | ((imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        mem_we0 = 1'b1;
    end else begin
        mem_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((imm3_reg_1552 == 3'd2) & (1'b1 == ap_CS_fsm_state7)) | ((imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        mem_we1 = 1'b1;
    end else begin
        mem_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        rf_address0 = tmp_41_fu_1503_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        rf_address0 = tmp_40_fu_1410_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        rf_address0 = tmp_10_fu_1238_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        rf_address0 = tmp_14_fu_1234_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rf_address0 = tmp_24_fu_885_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rf_address0 = tmp_8_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        rf_address0 = 5'd0;
    end else begin
        rf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        rf_address1 = tmp_28_fu_1414_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rf_address1 = tmp_29_fu_1383_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (7'd23 == Opcode_reg_1533))) begin
        rf_address1 = tmp_6_fu_866_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (7'd55 == Opcode_reg_1533))) begin
        rf_address1 = tmp_13_fu_823_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (7'd111 == Opcode_reg_1533))) begin
        rf_address1 = tmp_21_fu_764_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rf_address1 = tmp_9_fu_678_p1;
    end else begin
        rf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        rf_ce0 = 1'b1;
    end else begin
        rf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state3) & (7'd23 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state3) & (7'd55 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state3) & (7'd111 == Opcode_reg_1533)))) begin
        rf_ce1 = 1'b1;
    end else begin
        rf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        rf_d0 = ret_1_i_reg_484;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        rf_d0 = ret4_i_reg_419;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        rf_d0 = reg_588;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        rf_d0 = ret_5_fu_1225_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rf_d0 = tmp_23_fu_879_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        rf_d0 = 32'd0;
    end else begin
        rf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        rf_d1 = reg_588;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rf_d1 = ret1_i_reg_407;
    end else if (((1'b1 == ap_CS_fsm_state3) & (7'd23 == Opcode_reg_1533))) begin
        rf_d1 = tmp_5_fu_860_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (7'd55 == Opcode_reg_1533))) begin
        rf_d1 = tmp_12_fu_814_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (7'd111 == Opcode_reg_1533))) begin
        rf_d1 = tmp_18_fu_758_p2;
    end else begin
        rf_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state99) & (tmp_25_reg_1704 == 1'd1)) | ((1'b1 == ap_CS_fsm_state91) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        rf_we0 = 1'b1;
    end else begin
        rf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state3) & (7'd23 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state3) & (7'd55 == Opcode_reg_1533)) | ((1'b1 == ap_CS_fsm_state3) & (7'd111 == Opcode_reg_1533)))) begin
        rf_we1 = 1'b1;
    end else begin
        rf_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~(tmp_1_reg_1567 == 7'd1) & ~(tmp_1_reg_1567 == 7'd65) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_528_p3 == 1'd1) & (tmp_2_fu_686_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd64) & (7'd51 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else if (((1'b1 == ap_CS_fsm_state3) & (grp_fu_528_p3 == 1'd1) & (tmp_2_fu_686_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd96) & (7'd51 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else if (((1'b1 == ap_CS_fsm_state3) & ((~(tmp_1_reg_1567 == 7'd64) & ~(tmp_1_reg_1567 == 7'd1) & ~(tmp_1_reg_1567 == 7'd96) & ~(tmp_1_reg_1567 == 7'd65) & (grp_fu_528_p3 == 1'd1) & (7'd51 == Opcode_reg_1533)) | (~(tmp_1_reg_1567 == 7'd1) & ~(tmp_1_reg_1567 == 7'd65) & (grp_fu_528_p3 == 1'd1) & (tmp_2_fu_686_p2 == 1'd0) & (7'd51 == Opcode_reg_1533))))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else if ((~(tmp_1_reg_1567 == 7'd1) & ~(tmp_1_reg_1567 == 7'd65) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_528_p3 == 1'd0) & (7'd51 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else if (((grp_fu_562_p2 == 1'd0) & (imm3_reg_1552 == 3'd5) & (1'b1 == ap_CS_fsm_state3) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else if (((grp_fu_562_p2 == 1'd0) & (imm3_reg_1552 == 3'd4) & (1'b1 == ap_CS_fsm_state3) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((imm3_reg_1552 == 3'd0) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd1) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_686_p2 == 1'd0) & (tmp_1_reg_1567 == 7'd65) & (7'd51 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_686_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd65) & (7'd51 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((imm3_reg_1552 == 3'd0) & (7'd35 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd1) & (7'd35 == Opcode_reg_1533))))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~(imm3_reg_1552 == 3'd2) & ~(imm3_reg_1552 == 3'd0) & ~(imm3_reg_1552 == 3'd1) & (1'b1 == ap_CS_fsm_state3) & (7'd35 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((imm3_reg_1552 == 3'd2) & (1'b1 == ap_CS_fsm_state3) & (7'd35 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((imm3_reg_1552 == 3'd0) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd1) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd4) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd5) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd6) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd7) & (7'd99 == Opcode_reg_1533))))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state3) & ((7'd23 == Opcode_reg_1533) | (7'd55 == Opcode_reg_1533) | (7'd111 == Opcode_reg_1533) | (~(7'd3 == Opcode_reg_1533) & ~(7'd103 == Opcode_reg_1533) & ~(7'd19 == Opcode_reg_1533) & ~(7'd35 == Opcode_reg_1533) & ~(7'd99 == Opcode_reg_1533) & ~(7'd51 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd3) & (7'd99 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd2) & (7'd99 == Opcode_reg_1533)) | (~(imm3_reg_1552 == 3'd0) & ~(imm3_reg_1552 == 3'd1) & ~(imm3_reg_1552 == 3'd4) & ~(imm3_reg_1552 == 3'd5) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd4) & (grp_fu_562_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533)) | ((imm3_reg_1552 == 3'd5) & (grp_fu_562_p2 == 1'd1) & (tmp_1_reg_1567 == 7'd1) & (7'd51 == Opcode_reg_1533))))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else if (((1'b1 == ap_CS_fsm_state3) & (7'd19 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((1'b1 == ap_CS_fsm_state3) & (7'd3 == Opcode_reg_1533))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_approx_mul_fu_509_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            if (((grp_approx_add_fu_517_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state95))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            if (((grp_approx_add_fu_517_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Opcode_fu_609_p1 = inst_mem_q0[6:0];

assign Rs1_fu_633_p4 = {{inst_mem_q0[19:15]}};

assign Rs2_fu_653_p4 = {{inst_mem_q0[24:20]}};

assign addr_assign_1_fu_1045_p2 = ($signed(op_1_reg_1591) + $signed(i_imm_reg_1584));

assign addr_assign_fu_802_p0 = rf_q0;

assign addr_assign_fu_802_p2 = ($signed(addr_assign_fu_802_p0) + $signed(s_imm_fu_798_p1));

assign addr_s_1_fu_1049_p2 = ($signed(addr_assign_1_fu_1045_p2) + $signed(32'd4294926336));

assign addr_s_fu_808_p2 = ($signed(addr_assign_fu_802_p2) + $signed(32'd4294926336));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_phi_mux_ret_6_i_phi_fu_393_p12 = ret_6_i_reg_390;

assign approx_add_size_fu_1495_p3 = ((tmp_39_fu_1489_p2[0:0] === 1'b1) ? 8'd0 : p_op8_i_fu_1483_p2);

assign approx_mul_size_op1_fu_1293_p3 = ((tmp_i4_i_i_fu_1269_p2[0:0] === 1'b1) ? 8'd0 : phitmp_op_fu_1287_p2);

assign approx_mul_size_op2_fu_1325_p3 = ((tmp_i5_i_i_fu_1301_p2[0:0] === 1'b1) ? 8'd0 : phitmp1_op_fu_1319_p2);

assign grp_approx_add_fu_517_ap_start = grp_approx_add_fu_517_ap_start_reg;

assign grp_approx_mul_fu_509_ap_start = grp_approx_mul_fu_509_ap_start_reg;

assign grp_fu_528_p3 = instruction_reg_1520[32'd31];

assign grp_fu_535_p2 = ((grp_fu_535_p0 < grp_fu_535_p1) ? 1'b1 : 1'b0);

assign grp_fu_541_p0 = rf_q0;

assign grp_fu_541_p1 = rf_q1;

assign grp_fu_541_p2 = (($signed(grp_fu_541_p0) < $signed(grp_fu_541_p1)) ? 1'b1 : 1'b0);

assign grp_fu_547_p4 = {{instruction_reg_1520[31:12]}};

assign grp_fu_556_p1 = rf_q1;

assign grp_fu_556_p2 = ($signed(32'd0) - $signed(grp_fu_556_p1));

assign grp_fu_562_p2 = ((grp_fu_562_p0 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_578_p2 = ($signed(32'd4294926337) + $signed(addr_assign_reg_1674));

assign i_imm_fu_683_p1 = $signed(tmp_36_cast_reg_1562);

assign imm16_1_fu_959_p3 = {{tmp_35_fu_951_p3}, {1'd0}};

assign imm16_fu_914_p5 = {{{{grp_fu_528_p3}, {tmp_46_fu_907_p3}}, {tmp_30_fu_898_p4}}, {tmp_8_i1_cast_fu_889_p4}};

assign imm7_fu_827_p3 = ((tmp_2_fu_686_p2[0:0] === 1'b1) ? 7'd0 : tmp_1_reg_1567);

assign inst_mem_address0 = tmp_s_fu_604_p1;

assign jal_imm_1_fu_734_p7 = {{{{{{{{{{11'd2047}, {grp_fu_528_p3}}}, {tmp_16_fu_700_p4}}}, {tmp_20_fu_709_p3}}}, {tmp_22_cast_fu_691_p4}}}, {1'd0}};

assign jal_imm_3_fu_750_p3 = ((grp_fu_528_p3[0:0] === 1'b1) ? jal_imm_1_fu_734_p7 : jal_imm_cast_fu_730_p1);

assign jal_imm_cast_fu_730_p1 = jal_imm_fu_716_p6;

assign jal_imm_fu_716_p6 = {{{{{grp_fu_528_p3}, {tmp_16_fu_700_p4}}, {tmp_20_fu_709_p3}}, {tmp_22_cast_fu_691_p4}}, {1'd0}};

assign newSel1_fu_1200_p3 = ((tmp_2_reg_1633[0:0] === 1'b1) ? ret_1_fu_1187_p1 : ret_3_fu_1190_p5);

assign newSel2_fu_1165_p3 = ((sel_tmp2_i_fu_1122_p2[0:0] === 1'b1) ? ret_i7_cast_fu_1071_p1 : tmp_i1_fu_1075_p3);

assign newSel3_fu_1211_p3 = ((sel_tmp8_i_reg_1760[0:0] === 1'b1) ? newSel_reg_1766 : newSel1_fu_1200_p3);

assign newSel45_cast_fu_1222_p1 = newSel4_reg_1771;

assign newSel4_fu_1179_p3 = ((or_cond1_fu_1173_p2[0:0] === 1'b1) ? newSel2_fu_1165_p3 : 16'd0);

assign newSel_fu_1157_p3 = ((sel_tmp13_i_fu_1151_p2[0:0] === 1'b1) ? ret_2_fu_1083_p1 : ret_4_fu_1107_p4);

assign not_2_i_fu_780_p0 = rf_q0;

assign not_2_i_fu_780_p1 = rf_q1;

assign not_2_i_fu_780_p2 = ((not_2_i_fu_780_p0 != not_2_i_fu_780_p1) ? 1'b1 : 1'b0);

assign or_cond1_fu_1173_p2 = (sel_tmp_i1_fu_1117_p2 | sel_tmp2_i_fu_1122_p2);

assign or_cond2_fu_1217_p2 = (sel_tmp8_i_reg_1760 | or_cond_fu_1207_p2);

assign or_cond_fu_1207_p2 = (tmp_2_reg_1633 | sel_tmp4_i_reg_1755);

assign or_cond_i_i_fu_1363_p2 = (tmp_44_fu_1337_p3 | rev_fu_1357_p2);

assign p_op8_i_fu_1483_p2 = (8'd32 - tmp_51_fu_1457_p3);

assign pc_amount_2_fu_874_p2 = ($signed(tmp_22_fu_870_p2) + $signed(i_imm_reg_1584));

assign pc_amount_3_fu_967_p1 = $signed(imm16_1_fu_959_p3);

assign phitmp1_op_fu_1319_p2 = (8'd32 - tmp_43_fu_1315_p1);

assign phitmp_op_fu_1287_p2 = (8'd32 - tmp_42_fu_1283_p1);

assign res_5_fu_1369_p2 = (32'd0 - grp_approx_mul_fu_509_ap_return);

assign res_7_fu_1249_p3 = ((tmp_37_fu_1242_p3[0:0] === 1'b1) ? res_reg_1693 : op_1_reg_1591);

assign res_8_fu_1262_p3 = ((tmp_38_fu_1255_p3[0:0] === 1'b1) ? reg_583 : op_2_reg_1610);

assign res_9_fu_1375_p3 = ((or_cond_i_i_fu_1363_p2[0:0] === 1'b1) ? grp_approx_mul_fu_509_ap_return : res_5_fu_1369_p2);

assign res_fu_834_p1 = rf_q0;

assign res_fu_834_p2 = ($signed(32'd0) - $signed(res_fu_834_p1));

assign ret_1_fu_1187_p1 = mem_load_reg_1734;

assign ret_2_fu_1083_p1 = tmp_i1_fu_1075_p3;

assign ret_3_fu_1190_p5 = {{{{mem_q1}, {mem_q0}}, {mem_load_1_reg_1740}}, {mem_load_reg_1734}};

assign ret_4_fu_1107_p4 = {{{{16'd65535}, {mem_q0}}}, {mem_q1}};

assign ret_5_fu_1225_p3 = ((or_cond2_fu_1217_p2[0:0] === 1'b1) ? newSel3_fu_1211_p3 : newSel45_cast_fu_1222_p1);

assign ret_6_fu_1403_p3 = ((tmp_36_reg_1811[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign ret_fu_1399_p2 = ($signed(op_2_reg_1610) * $signed({{1'b0}, {op_1_reg_1591}}));

assign ret_i7_cast_fu_1071_p1 = mem_q1;

assign rev1_fu_1145_p2 = (tmp_17_fu_1137_p3 ^ 1'd1);

assign rev2_fu_774_p2 = (grp_fu_541_p2 ^ 1'd1);

assign rev3_fu_768_p2 = (grp_fu_535_p2 ^ 1'd1);

assign rev_fu_1357_p2 = (tmp_45_fu_1349_p3 ^ 1'd1);

assign s_imm_fu_798_p1 = $signed(tmp_15_fu_792_p3);

assign sel_tmp13_i_fu_1151_p2 = (sel_tmp8_i_fu_1132_p2 & rev1_fu_1145_p2);

assign sel_tmp1_i_fu_1443_p2 = (sel_tmp_i_fu_1437_p2 & grp_fu_535_p2);

assign sel_tmp2_i_fu_1122_p2 = ((imm3_reg_1552 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp3_i_fu_1465_p2 = (grp_fu_562_p2 & grp_fu_535_p2);

assign sel_tmp4_i_fu_1127_p2 = ((imm3_reg_1552 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_i_fu_1471_p2 = (grp_fu_535_p2 ^ 1'd1);

assign sel_tmp6_i_fu_1477_p2 = (tmp_i1_i_fu_1418_p2 & sel_tmp5_i_fu_1471_p2);

assign sel_tmp8_i_fu_1132_p2 = ((imm3_reg_1552 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp_i1_fu_1117_p2 = ((imm3_reg_1552 == 3'd5) ? 1'b1 : 1'b0);

assign sel_tmp_i_fu_1437_p2 = (grp_fu_562_p2 ^ 1'd1);

assign tmp_10_fu_1238_p1 = Rd_reg_1537;

assign tmp_10_i2_fu_1097_p2 = ($signed(addr_assign_1_reg_1718) + $signed(32'd4294926338));

assign tmp_11_i2_fu_1102_p1 = $signed(tmp_10_i2_fu_1097_p2);

assign tmp_12_fu_814_p3 = {{grp_fu_547_p4}, {12'd0}};

assign tmp_13_fu_823_p1 = Rd_reg_1537;

assign tmp_13_i_fu_979_p1 = $signed(grp_fu_578_p2);

assign tmp_14_fu_1234_p1 = Rd_reg_1537;

assign tmp_15_fu_792_p3 = {{tmp_1_reg_1567}, {Rd_reg_1537}};

assign tmp_16_fu_700_p4 = {{instruction_reg_1520[19:12]}};

assign tmp_16_i_fu_994_p2 = ($signed(32'd4294926338) + $signed(addr_assign_reg_1674));

assign tmp_17_fu_1137_p3 = mem_q0[32'd7];

assign tmp_17_i_fu_999_p1 = $signed(tmp_16_i_fu_994_p2);

assign tmp_18_fu_758_p2 = (32'd4 + PC);

assign tmp_1_i8_fu_1060_p2 = ($signed(addr_assign_1_fu_1045_p2) + $signed(32'd4294926337));

assign tmp_20_fu_709_p3 = instruction_reg_1520[32'd20];

assign tmp_20_i_fu_1014_p2 = ($signed(32'd4294926339) + $signed(addr_assign_reg_1674));

assign tmp_21_fu_764_p1 = Rd_reg_1537;

assign tmp_21_i_fu_1019_p1 = $signed(tmp_20_i_fu_1014_p2);

assign tmp_22_cast_fu_691_p4 = {{instruction_reg_1520[30:21]}};

assign tmp_22_fu_870_p2 = (op_1_reg_1591 - PC);

assign tmp_23_fu_879_p2 = (PC + 32'd4);

assign tmp_24_fu_885_p1 = Rd_reg_1537;

assign tmp_26_fu_1037_p1 = op_2_reg_1610[7:0];

assign tmp_28_fu_1414_p1 = Rd_reg_1537;

assign tmp_29_fu_1383_p1 = Rd_reg_1537;

assign tmp_2_fu_686_p2 = ((imm3_reg_1552 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_2_i9_fu_1066_p1 = $signed(tmp_1_i8_fu_1060_p2);

assign tmp_2_i_fu_1028_p1 = addr_s_reg_1681;

assign tmp_30_fu_898_p4 = {{instruction_reg_1520[30:25]}};

assign tmp_31_fu_1024_p1 = op_2_reg_1610[7:0];

assign tmp_32_fu_971_p1 = op_2_reg_1610[7:0];

assign tmp_33_fu_933_p1 = imm16_fu_914_p5;

assign tmp_34_fu_937_p6 = {{{{{{{{3'd7}, {grp_fu_528_p3}}}, {tmp_46_fu_907_p3}}}, {tmp_30_fu_898_p4}}}, {tmp_8_i1_cast_fu_889_p4}};

assign tmp_35_fu_951_p3 = ((tmp_48_fu_926_p3[0:0] === 1'b1) ? tmp_34_fu_937_p6 : tmp_33_fu_933_p1);

assign tmp_37_fu_1242_p3 = op_1_reg_1591[32'd31];

assign tmp_38_fu_1255_p3 = op_2_reg_1610[32'd31];

assign tmp_39_fu_1489_p2 = (sel_tmp6_i_fu_1477_p2 | sel_tmp3_i_fu_1465_p2);

assign tmp_40_fu_1410_p1 = Rd_reg_1537;

assign tmp_41_fu_1503_p1 = Rd_reg_1537;

assign tmp_42_fu_1283_p1 = tmp_i_i_i_fu_1275_p3[7:0];

assign tmp_43_fu_1315_p1 = tmp_i6_i_i_fu_1307_p3[7:0];

assign tmp_44_fu_1337_p3 = tmp_6_i_i_fu_1333_p2[32'd31];

assign tmp_45_fu_1349_p3 = tmp_8_i_i_fu_1345_p2[32'd31];

assign tmp_46_fu_907_p3 = instruction_reg_1520[32'd7];

assign tmp_48_fu_926_p3 = instruction_reg_1520[32'd31];

assign tmp_49_fu_1449_p1 = tmp_i_i3_fu_1423_p3[7:0];

assign tmp_4_fu_852_p3 = {{grp_fu_547_p4}, {12'd0}};

assign tmp_50_fu_1453_p1 = tmp_i2_i_fu_1430_p3[7:0];

assign tmp_51_fu_1457_p3 = ((sel_tmp1_i_fu_1443_p2[0:0] === 1'b1) ? tmp_49_fu_1449_p1 : tmp_50_fu_1453_p1);

assign tmp_5_fu_860_p2 = (tmp_4_fu_852_p3 + PC);

assign tmp_6_fu_866_p1 = Rd_reg_1537;

assign tmp_6_i1_fu_1087_p2 = ($signed(addr_assign_1_reg_1718) + $signed(32'd4294926339));

assign tmp_6_i_fu_1032_p1 = $signed(grp_fu_578_p2);

assign tmp_6_i_i_fu_1333_p2 = (op_2_reg_1610 & op_1_reg_1591);

assign tmp_7_i1_fu_1092_p1 = $signed(tmp_6_i1_fu_1087_p2);

assign tmp_8_fu_673_p1 = Rs1_fu_633_p4;

assign tmp_8_i1_cast_fu_889_p4 = {{instruction_reg_1520[11:8]}};

assign tmp_8_i_fu_975_p1 = addr_s_reg_1681;

assign tmp_8_i_i_fu_1345_p2 = (op_2_reg_1610 | op_1_reg_1591);

assign tmp_9_fu_678_p1 = Rs2_fu_653_p4;

assign tmp_9_i_fu_1041_p1 = addr_s_reg_1681;

assign tmp_fu_594_p4 = {{PC[31:2]}};

assign tmp_i1_fu_1075_p3 = {{mem_q0}, {mem_q1}};

assign tmp_i1_i_fu_1418_p2 = ((op_1_reg_1591 == 32'd0) ? 1'b1 : 1'b0);

always @ (op_1_reg_1591) begin
    if (op_1_reg_1591[31] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd0;
    end else if (op_1_reg_1591[30] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd1;
    end else if (op_1_reg_1591[29] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd2;
    end else if (op_1_reg_1591[28] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd3;
    end else if (op_1_reg_1591[27] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd4;
    end else if (op_1_reg_1591[26] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd5;
    end else if (op_1_reg_1591[25] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd6;
    end else if (op_1_reg_1591[24] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd7;
    end else if (op_1_reg_1591[23] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd8;
    end else if (op_1_reg_1591[22] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd9;
    end else if (op_1_reg_1591[21] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd10;
    end else if (op_1_reg_1591[20] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd11;
    end else if (op_1_reg_1591[19] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd12;
    end else if (op_1_reg_1591[18] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd13;
    end else if (op_1_reg_1591[17] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd14;
    end else if (op_1_reg_1591[16] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd15;
    end else if (op_1_reg_1591[15] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd16;
    end else if (op_1_reg_1591[14] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd17;
    end else if (op_1_reg_1591[13] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd18;
    end else if (op_1_reg_1591[12] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd19;
    end else if (op_1_reg_1591[11] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd20;
    end else if (op_1_reg_1591[10] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd21;
    end else if (op_1_reg_1591[9] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd22;
    end else if (op_1_reg_1591[8] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd23;
    end else if (op_1_reg_1591[7] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd24;
    end else if (op_1_reg_1591[6] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd25;
    end else if (op_1_reg_1591[5] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd26;
    end else if (op_1_reg_1591[4] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd27;
    end else if (op_1_reg_1591[3] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd28;
    end else if (op_1_reg_1591[2] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd29;
    end else if (op_1_reg_1591[1] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd30;
    end else if (op_1_reg_1591[0] == 1'b1) begin
        tmp_i2_i_fu_1430_p3 = 32'd31;
    end else begin
        tmp_i2_i_fu_1430_p3 = 32'd32;
    end
end

assign tmp_i4_i_i_fu_1269_p2 = ((res_7_fu_1249_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_i5_fu_786_p0 = rf_q0;

assign tmp_i5_fu_786_p1 = rf_q1;

assign tmp_i5_fu_786_p2 = ((tmp_i5_fu_786_p0 == tmp_i5_fu_786_p1) ? 1'b1 : 1'b0);

assign tmp_i5_i_i_fu_1301_p2 = ((res_8_fu_1262_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_i6_fu_1055_p1 = $signed(addr_s_1_fu_1049_p2);

always @ (res_8_fu_1262_p3) begin
    if (res_8_fu_1262_p3[31] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd0;
    end else if (res_8_fu_1262_p3[30] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd1;
    end else if (res_8_fu_1262_p3[29] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd2;
    end else if (res_8_fu_1262_p3[28] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd3;
    end else if (res_8_fu_1262_p3[27] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd4;
    end else if (res_8_fu_1262_p3[26] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd5;
    end else if (res_8_fu_1262_p3[25] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd6;
    end else if (res_8_fu_1262_p3[24] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd7;
    end else if (res_8_fu_1262_p3[23] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd8;
    end else if (res_8_fu_1262_p3[22] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd9;
    end else if (res_8_fu_1262_p3[21] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd10;
    end else if (res_8_fu_1262_p3[20] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd11;
    end else if (res_8_fu_1262_p3[19] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd12;
    end else if (res_8_fu_1262_p3[18] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd13;
    end else if (res_8_fu_1262_p3[17] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd14;
    end else if (res_8_fu_1262_p3[16] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd15;
    end else if (res_8_fu_1262_p3[15] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd16;
    end else if (res_8_fu_1262_p3[14] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd17;
    end else if (res_8_fu_1262_p3[13] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd18;
    end else if (res_8_fu_1262_p3[12] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd19;
    end else if (res_8_fu_1262_p3[11] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd20;
    end else if (res_8_fu_1262_p3[10] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd21;
    end else if (res_8_fu_1262_p3[9] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd22;
    end else if (res_8_fu_1262_p3[8] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd23;
    end else if (res_8_fu_1262_p3[7] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd24;
    end else if (res_8_fu_1262_p3[6] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd25;
    end else if (res_8_fu_1262_p3[5] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd26;
    end else if (res_8_fu_1262_p3[4] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd27;
    end else if (res_8_fu_1262_p3[3] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd28;
    end else if (res_8_fu_1262_p3[2] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd29;
    end else if (res_8_fu_1262_p3[1] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd30;
    end else if (res_8_fu_1262_p3[0] == 1'b1) begin
        tmp_i6_i_i_fu_1307_p3 = 32'd31;
    end else begin
        tmp_i6_i_i_fu_1307_p3 = 32'd32;
    end
end

assign tmp_i_fu_1387_p2 = ($signed({{1'b0}, {op_1_reg_1591}}) * $signed(op_2_reg_1610));

always @ (op_2_reg_1610) begin
    if (op_2_reg_1610[31] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd0;
    end else if (op_2_reg_1610[30] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd1;
    end else if (op_2_reg_1610[29] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd2;
    end else if (op_2_reg_1610[28] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd3;
    end else if (op_2_reg_1610[27] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd4;
    end else if (op_2_reg_1610[26] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd5;
    end else if (op_2_reg_1610[25] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd6;
    end else if (op_2_reg_1610[24] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd7;
    end else if (op_2_reg_1610[23] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd8;
    end else if (op_2_reg_1610[22] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd9;
    end else if (op_2_reg_1610[21] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd10;
    end else if (op_2_reg_1610[20] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd11;
    end else if (op_2_reg_1610[19] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd12;
    end else if (op_2_reg_1610[18] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd13;
    end else if (op_2_reg_1610[17] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd14;
    end else if (op_2_reg_1610[16] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd15;
    end else if (op_2_reg_1610[15] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd16;
    end else if (op_2_reg_1610[14] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd17;
    end else if (op_2_reg_1610[13] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd18;
    end else if (op_2_reg_1610[12] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd19;
    end else if (op_2_reg_1610[11] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd20;
    end else if (op_2_reg_1610[10] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd21;
    end else if (op_2_reg_1610[9] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd22;
    end else if (op_2_reg_1610[8] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd23;
    end else if (op_2_reg_1610[7] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd24;
    end else if (op_2_reg_1610[6] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd25;
    end else if (op_2_reg_1610[5] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd26;
    end else if (op_2_reg_1610[4] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd27;
    end else if (op_2_reg_1610[3] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd28;
    end else if (op_2_reg_1610[2] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd29;
    end else if (op_2_reg_1610[1] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd30;
    end else if (op_2_reg_1610[0] == 1'b1) begin
        tmp_i_i3_fu_1423_p3 = 32'd31;
    end else begin
        tmp_i_i3_fu_1423_p3 = 32'd32;
    end
end

always @ (res_7_fu_1249_p3) begin
    if (res_7_fu_1249_p3[31] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd0;
    end else if (res_7_fu_1249_p3[30] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd1;
    end else if (res_7_fu_1249_p3[29] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd2;
    end else if (res_7_fu_1249_p3[28] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd3;
    end else if (res_7_fu_1249_p3[27] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd4;
    end else if (res_7_fu_1249_p3[26] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd5;
    end else if (res_7_fu_1249_p3[25] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd6;
    end else if (res_7_fu_1249_p3[24] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd7;
    end else if (res_7_fu_1249_p3[23] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd8;
    end else if (res_7_fu_1249_p3[22] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd9;
    end else if (res_7_fu_1249_p3[21] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd10;
    end else if (res_7_fu_1249_p3[20] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd11;
    end else if (res_7_fu_1249_p3[19] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd12;
    end else if (res_7_fu_1249_p3[18] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd13;
    end else if (res_7_fu_1249_p3[17] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd14;
    end else if (res_7_fu_1249_p3[16] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd15;
    end else if (res_7_fu_1249_p3[15] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd16;
    end else if (res_7_fu_1249_p3[14] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd17;
    end else if (res_7_fu_1249_p3[13] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd18;
    end else if (res_7_fu_1249_p3[12] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd19;
    end else if (res_7_fu_1249_p3[11] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd20;
    end else if (res_7_fu_1249_p3[10] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd21;
    end else if (res_7_fu_1249_p3[9] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd22;
    end else if (res_7_fu_1249_p3[8] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd23;
    end else if (res_7_fu_1249_p3[7] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd24;
    end else if (res_7_fu_1249_p3[6] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd25;
    end else if (res_7_fu_1249_p3[5] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd26;
    end else if (res_7_fu_1249_p3[4] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd27;
    end else if (res_7_fu_1249_p3[3] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd28;
    end else if (res_7_fu_1249_p3[2] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd29;
    end else if (res_7_fu_1249_p3[1] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd30;
    end else if (res_7_fu_1249_p3[0] == 1'b1) begin
        tmp_i_i_i_fu_1275_p3 = 32'd31;
    end else begin
        tmp_i_i_i_fu_1275_p3 = 32'd32;
    end
end

assign tmp_s_fu_604_p1 = tmp_fu_594_p4;

endmodule //datapath
