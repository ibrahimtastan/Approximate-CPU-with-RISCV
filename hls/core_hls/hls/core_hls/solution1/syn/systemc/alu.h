// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _alu_HH_
#define _alu_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct alu : public sc_module {
    // Port declarations 6
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > op_1;
    sc_in< sc_lv<32> > op_2;
    sc_in< sc_lv<3> > ftype;
    sc_in< sc_lv<7> > func7;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    alu(sc_module_name name);
    SC_HAS_PROCESS(alu);

    ~alu();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > ret_11_fu_108_p2;
    sc_signal< sc_lv<32> > ap_phi_mux_ret_4_phi_fu_63_p26;
    sc_signal< sc_lv<3> > ftype_read_read_fu_42_p2;
    sc_signal< sc_lv<32> > ret_2_fu_121_p1;
    sc_signal< sc_lv<32> > ret_1_fu_132_p1;
    sc_signal< sc_lv<32> > ret_10_fu_137_p2;
    sc_signal< sc_lv<32> > ret_9_fu_144_p2;
    sc_signal< sc_lv<32> > ret_fu_151_p2;
    sc_signal< sc_lv<7> > func7_read_read_fu_36_p2;
    sc_signal< sc_lv<32> > ret_13_fu_158_p2;
    sc_signal< sc_lv<32> > ret_12_fu_165_p2;
    sc_signal< sc_lv<32> > ret_15_fu_94_p2;
    sc_signal< sc_lv<32> > ret_14_fu_101_p2;
    sc_signal< sc_lv<1> > tmp_90_fu_115_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_126_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<7> ap_const_lv7_20;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_phi_mux_ret_4_phi_fu_63_p26();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ftype_read_read_fu_42_p2();
    void thread_func7_read_read_fu_36_p2();
    void thread_ret_10_fu_137_p2();
    void thread_ret_11_fu_108_p2();
    void thread_ret_12_fu_165_p2();
    void thread_ret_13_fu_158_p2();
    void thread_ret_14_fu_101_p2();
    void thread_ret_15_fu_94_p2();
    void thread_ret_1_fu_132_p1();
    void thread_ret_2_fu_121_p1();
    void thread_ret_9_fu_144_p2();
    void thread_ret_fu_151_p2();
    void thread_tmp_90_fu_115_p2();
    void thread_tmp_s_fu_126_p2();
};

}

using namespace ap_rtl;

#endif
