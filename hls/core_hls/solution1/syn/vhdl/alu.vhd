-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity alu is
port (
    ap_ready : OUT STD_LOGIC;
    op_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    op_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    ftype : IN STD_LOGIC_VECTOR (2 downto 0);
    func7 : IN STD_LOGIC_VECTOR (6 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of alu is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ret_11_fu_108_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_ret_4_phi_fu_63_p26 : STD_LOGIC_VECTOR (31 downto 0);
    signal ftype_read_read_fu_42_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ret_2_fu_121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_1_fu_132_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_10_fu_137_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_9_fu_144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_fu_151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal func7_read_read_fu_36_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_13_fu_158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_12_fu_165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_15_fu_94_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_14_fu_101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_phi_mux_ret_4_phi_fu_63_p26_assign_proc : process(ret_11_fu_108_p2, ftype_read_read_fu_42_p2, ret_2_fu_121_p1, ret_1_fu_132_p1, ret_10_fu_137_p2, ret_9_fu_144_p2, ret_fu_151_p2, func7_read_read_fu_36_p2, ret_13_fu_158_p2, ret_12_fu_165_p2, ret_15_fu_94_p2, ret_14_fu_101_p2)
    begin
        if (((func7_read_read_fu_36_p2 = ap_const_lv7_0) and (ftype_read_read_fu_42_p2 = ap_const_lv3_5))) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_14_fu_101_p2;
        elsif (((func7_read_read_fu_36_p2 = ap_const_lv7_20) and (ftype_read_read_fu_42_p2 = ap_const_lv3_5))) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_15_fu_94_p2;
        elsif (((func7_read_read_fu_36_p2 = ap_const_lv7_0) and (ftype_read_read_fu_42_p2 = ap_const_lv3_0))) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_12_fu_165_p2;
        elsif (((func7_read_read_fu_36_p2 = ap_const_lv7_20) and (ftype_read_read_fu_42_p2 = ap_const_lv3_0))) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_13_fu_158_p2;
        elsif (((not((func7_read_read_fu_36_p2 = ap_const_lv7_0)) and not((func7_read_read_fu_36_p2 = ap_const_lv7_20)) and (ftype_read_read_fu_42_p2 = ap_const_lv3_5)) or (not((func7_read_read_fu_36_p2 = ap_const_lv7_0)) and not((func7_read_read_fu_36_p2 = ap_const_lv7_20)) and (ftype_read_read_fu_42_p2 = ap_const_lv3_0)))) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ap_const_lv32_0;
        elsif ((ftype_read_read_fu_42_p2 = ap_const_lv3_4)) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_fu_151_p2;
        elsif ((ftype_read_read_fu_42_p2 = ap_const_lv3_6)) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_9_fu_144_p2;
        elsif ((ftype_read_read_fu_42_p2 = ap_const_lv3_7)) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_10_fu_137_p2;
        elsif ((ftype_read_read_fu_42_p2 = ap_const_lv3_2)) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_1_fu_132_p1;
        elsif ((ftype_read_read_fu_42_p2 = ap_const_lv3_3)) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_2_fu_121_p1;
        elsif ((ftype_read_read_fu_42_p2 = ap_const_lv3_1)) then 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= ret_11_fu_108_p2;
        else 
            ap_phi_mux_ret_4_phi_fu_63_p26 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= ap_const_logic_1;
    ap_return <= ap_phi_mux_ret_4_phi_fu_63_p26;
    ftype_read_read_fu_42_p2 <= ftype;
    func7_read_read_fu_36_p2 <= func7;
    ret_10_fu_137_p2 <= (op_2 and op_1);
    ret_11_fu_108_p2 <= std_logic_vector(shift_left(unsigned(op_1),to_integer(unsigned('0' & op_2(31-1 downto 0)))));
    ret_12_fu_165_p2 <= std_logic_vector(unsigned(op_2) + unsigned(op_1));
    ret_13_fu_158_p2 <= std_logic_vector(unsigned(op_1) - unsigned(op_2));
    ret_14_fu_101_p2 <= std_logic_vector(shift_right(unsigned(op_1),to_integer(unsigned('0' & op_2(31-1 downto 0)))));
    ret_15_fu_94_p2 <= std_logic_vector(shift_right(signed(op_1),to_integer(unsigned('0' & op_2(31-1 downto 0)))));
    ret_1_fu_132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_126_p2),32));
    ret_2_fu_121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_115_p2),32));
    ret_9_fu_144_p2 <= (op_2 or op_1);
    ret_fu_151_p2 <= (op_2 xor op_1);
    tmp_90_fu_115_p2 <= "1" when (unsigned(op_1) < unsigned(op_2)) else "0";
    tmp_s_fu_126_p2 <= "1" when (signed(op_1) < signed(op_2)) else "0";
end behav;
