// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _approx_mul_HH_
#define _approx_mul_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct approx_mul : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > opA;
    sc_in< sc_lv<32> > opB;
    sc_in< sc_lv<8> > size_op1;
    sc_in< sc_lv<8> > size_op2;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    approx_mul(sc_module_name name);
    SC_HAS_PROCESS(approx_mul);

    ~approx_mul();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_55_fu_162_p3;
    sc_signal< sc_lv<1> > tmp_55_reg_802;
    sc_signal< sc_lv<1> > tmp_60_fu_194_p3;
    sc_signal< sc_lv<1> > tmp_60_reg_807;
    sc_signal< sc_lv<1> > sig_158_fu_202_p2;
    sc_signal< sc_lv<1> > sig_158_reg_812;
    sc_signal< sc_lv<1> > sig_481_fu_214_p2;
    sc_signal< sc_lv<1> > sig_481_reg_817;
    sc_signal< sc_lv<1> > sig_504_fu_220_p2;
    sc_signal< sc_lv<1> > sig_504_reg_822;
    sc_signal< sc_lv<1> > sig_1058_fu_238_p2;
    sc_signal< sc_lv<1> > sig_1058_reg_827;
    sc_signal< sc_lv<1> > sig_1405_fu_250_p2;
    sc_signal< sc_lv<1> > sig_1405_reg_832;
    sc_signal< sc_lv<1> > sig_3452_fu_298_p2;
    sc_signal< sc_lv<1> > sig_3452_reg_837;
    sc_signal< sc_lv<1> > sig_3992_fu_316_p2;
    sc_signal< sc_lv<1> > sig_3992_reg_843;
    sc_signal< sc_lv<1> > sig_5314_fu_328_p2;
    sc_signal< sc_lv<1> > sig_5314_reg_849;
    sc_signal< sc_lv<1> > tmp_70_reg_854;
    sc_signal< sc_lv<1> > tmp_80_reg_860;
    sc_signal< sc_lv<1> > tmp_s_fu_380_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_867;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_52_fu_138_p3;
    sc_signal< sc_lv<1> > tmp_58_fu_186_p3;
    sc_signal< sc_lv<1> > tmp_54_fu_154_p3;
    sc_signal< sc_lv<1> > tmp_53_fu_146_p3;
    sc_signal< sc_lv<1> > tmp_56_fu_170_p3;
    sc_signal< sc_lv<1> > tmp_57_fu_178_p3;
    sc_signal< sc_lv<1> > tmp3_fu_262_p2;
    sc_signal< sc_lv<1> > sig_2089_fu_256_p2;
    sc_signal< sc_lv<1> > sig_827_fu_226_p2;
    sc_signal< sc_lv<1> > sig_2740_fu_274_p2;
    sc_signal< sc_lv<1> > sig_280_fu_208_p2;
    sc_signal< sc_lv<1> > sig_3272_fu_280_p2;
    sc_signal< sc_lv<1> > sig_2643_fu_268_p2;
    sc_signal< sc_lv<1> > sig_3383_fu_286_p2;
    sc_signal< sc_lv<1> > sig_3760_fu_304_p2;
    sc_signal< sc_lv<1> > sig_3438_fu_292_p2;
    sc_signal< sc_lv<1> > sig_3974_fu_310_p2;
    sc_signal< sc_lv<1> > sig_1015_fu_232_p2;
    sc_signal< sc_lv<1> > sig_4402_fu_322_p2;
    sc_signal< sc_lv<1> > tmp6_fu_340_p2;
    sc_signal< sc_lv<1> > sig_1219_fu_244_p2;
    sc_signal< sc_lv<1> > tmp5_fu_346_p2;
    sc_signal< sc_lv<1> > tmp4_fu_334_p2;
    sc_signal< sc_lv<1> > tmp7_fu_374_p2;
    sc_signal< sc_lv<1> > sig_5458_fu_352_p2;
    sc_signal< sc_lv<1> > sig_810_fu_393_p2;
    sc_signal< sc_lv<32> > tmp_97_cast_fu_408_p1;
    sc_signal< sc_lv<32> > tmp_42_fu_411_p1;
    sc_signal< sc_lv<32> > sig_810_cast_fu_397_p1;
    sc_signal< sc_lv<32> > tmp_44_fu_449_p1;
    sc_signal< sc_lv<1> > tmp_89_fu_494_p3;
    sc_signal< sc_lv<1> > tmp_86_fu_473_p3;
    sc_signal< sc_lv<1> > tmp_85_fu_466_p3;
    sc_signal< sc_lv<1> > tmp_fu_386_p3;
    sc_signal< sc_lv<1> > tmp_84_fu_442_p3;
    sc_signal< sc_lv<1> > tmp_83_fu_435_p3;
    sc_signal< sc_lv<1> > tmp_82_fu_428_p3;
    sc_signal< sc_lv<2> > tmp_47_fu_501_p4;
    sc_signal< sc_lv<1> > tmp_79_fu_401_p3;
    sc_signal< sc_lv<1> > tmp_88_fu_487_p3;
    sc_signal< sc_lv<1> > tmp_87_fu_480_p3;
    sc_signal< sc_lv<1> > tmp_81_fu_421_p3;
    sc_signal< sc_lv<27> > tmp26_fu_555_p12;
    sc_signal< sc_lv<32> > tmp_45_fu_453_p2;
    sc_signal< sc_lv<19> > tmp_90_fu_583_p1;
    sc_signal< sc_lv<19> > tmp_46_fu_459_p3;
    sc_signal< sc_lv<11> > tmp_49_fu_593_p4;
    sc_signal< sc_lv<19> > tmp_48_fu_587_p2;
    sc_signal< sc_lv<8> > tmp_50_fu_613_p4;
    sc_signal< sc_lv<30> > tmp_51_fu_623_p3;
    sc_signal< sc_lv<30> > tmp32_fu_603_p5;
    sc_signal< sc_lv<27> > tmp_61_fu_640_p3;
    sc_signal< sc_lv<27> > tmp_59_fu_631_p4;
    sc_signal< sc_lv<2> > tmp_63_fu_654_p4;
    sc_signal< sc_lv<30> > tmp_62_fu_648_p2;
    sc_signal< sc_lv<32> > tmp_43_fu_415_p2;
    sc_signal< sc_lv<15> > tmp_91_fu_688_p1;
    sc_signal< sc_lv<15> > tmp34_fu_678_p5;
    sc_signal< sc_lv<17> > tmp_66_fu_698_p4;
    sc_signal< sc_lv<15> > tmp_65_fu_692_p2;
    sc_signal< sc_lv<12> > tmp_67_fu_708_p4;
    sc_signal< sc_lv<32> > tmp35_fu_718_p3;
    sc_signal< sc_lv<32> > tmp30_fu_670_p3;
    sc_signal< sc_lv<27> > tmp_68_fu_726_p3;
    sc_signal< sc_lv<27> > tmp_64_fu_664_p2;
    sc_signal< sc_lv<27> > tmp_69_fu_740_p2;
    sc_signal< sc_lv<27> > tmp23_fu_577_p2;
    sc_signal< sc_lv<32> > tmp33_fu_734_p2;
    sc_signal< sc_lv<5> > tmp_72_fu_752_p4;
    sc_signal< sc_lv<27> > tmp_71_fu_746_p2;
    sc_signal< sc_lv<32> > tmp29_fu_762_p3;
    sc_signal< sc_lv<32> > tmp8_fu_510_p24;
    sc_signal< sc_lv<32> > tmp22_fu_770_p2;
    sc_signal< sc_lv<32> > tmp_73_fu_776_p2;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<27> ap_const_lv27_1000000;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_40;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_sig_1015_fu_232_p2();
    void thread_sig_1058_fu_238_p2();
    void thread_sig_1219_fu_244_p2();
    void thread_sig_1405_fu_250_p2();
    void thread_sig_158_fu_202_p2();
    void thread_sig_2089_fu_256_p2();
    void thread_sig_2643_fu_268_p2();
    void thread_sig_2740_fu_274_p2();
    void thread_sig_280_fu_208_p2();
    void thread_sig_3272_fu_280_p2();
    void thread_sig_3383_fu_286_p2();
    void thread_sig_3438_fu_292_p2();
    void thread_sig_3452_fu_298_p2();
    void thread_sig_3760_fu_304_p2();
    void thread_sig_3974_fu_310_p2();
    void thread_sig_3992_fu_316_p2();
    void thread_sig_4402_fu_322_p2();
    void thread_sig_481_fu_214_p2();
    void thread_sig_504_fu_220_p2();
    void thread_sig_5314_fu_328_p2();
    void thread_sig_5458_fu_352_p2();
    void thread_sig_810_cast_fu_397_p1();
    void thread_sig_810_fu_393_p2();
    void thread_sig_827_fu_226_p2();
    void thread_tmp22_fu_770_p2();
    void thread_tmp23_fu_577_p2();
    void thread_tmp26_fu_555_p12();
    void thread_tmp29_fu_762_p3();
    void thread_tmp30_fu_670_p3();
    void thread_tmp32_fu_603_p5();
    void thread_tmp33_fu_734_p2();
    void thread_tmp34_fu_678_p5();
    void thread_tmp35_fu_718_p3();
    void thread_tmp3_fu_262_p2();
    void thread_tmp4_fu_334_p2();
    void thread_tmp5_fu_346_p2();
    void thread_tmp6_fu_340_p2();
    void thread_tmp7_fu_374_p2();
    void thread_tmp8_fu_510_p24();
    void thread_tmp_42_fu_411_p1();
    void thread_tmp_43_fu_415_p2();
    void thread_tmp_44_fu_449_p1();
    void thread_tmp_45_fu_453_p2();
    void thread_tmp_46_fu_459_p3();
    void thread_tmp_47_fu_501_p4();
    void thread_tmp_48_fu_587_p2();
    void thread_tmp_49_fu_593_p4();
    void thread_tmp_50_fu_613_p4();
    void thread_tmp_51_fu_623_p3();
    void thread_tmp_52_fu_138_p3();
    void thread_tmp_53_fu_146_p3();
    void thread_tmp_54_fu_154_p3();
    void thread_tmp_55_fu_162_p3();
    void thread_tmp_56_fu_170_p3();
    void thread_tmp_57_fu_178_p3();
    void thread_tmp_58_fu_186_p3();
    void thread_tmp_59_fu_631_p4();
    void thread_tmp_60_fu_194_p3();
    void thread_tmp_61_fu_640_p3();
    void thread_tmp_62_fu_648_p2();
    void thread_tmp_63_fu_654_p4();
    void thread_tmp_64_fu_664_p2();
    void thread_tmp_65_fu_692_p2();
    void thread_tmp_66_fu_698_p4();
    void thread_tmp_67_fu_708_p4();
    void thread_tmp_68_fu_726_p3();
    void thread_tmp_69_fu_740_p2();
    void thread_tmp_71_fu_746_p2();
    void thread_tmp_72_fu_752_p4();
    void thread_tmp_73_fu_776_p2();
    void thread_tmp_79_fu_401_p3();
    void thread_tmp_81_fu_421_p3();
    void thread_tmp_82_fu_428_p3();
    void thread_tmp_83_fu_435_p3();
    void thread_tmp_84_fu_442_p3();
    void thread_tmp_85_fu_466_p3();
    void thread_tmp_86_fu_473_p3();
    void thread_tmp_87_fu_480_p3();
    void thread_tmp_88_fu_487_p3();
    void thread_tmp_89_fu_494_p3();
    void thread_tmp_90_fu_583_p1();
    void thread_tmp_91_fu_688_p1();
    void thread_tmp_97_cast_fu_408_p1();
    void thread_tmp_fu_386_p3();
    void thread_tmp_s_fu_380_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
