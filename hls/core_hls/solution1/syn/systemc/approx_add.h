// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _approx_add_HH_
#define _approx_add_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct approx_add : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > a;
    sc_in< sc_lv<32> > b;
    sc_in< sc_lv<8> > approx_add_size;
    sc_in< sc_lv<1> > add_sub;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    approx_add(sc_module_name name);
    SC_HAS_PROCESS(approx_add);

    ~approx_add();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > n132_fu_208_p2;
    sc_signal< sc_lv<1> > n132_reg_471;
    sc_signal< sc_lv<1> > n182_fu_220_p2;
    sc_signal< sc_lv<1> > n182_reg_478;
    sc_signal< sc_lv<1> > n232_fu_256_p2;
    sc_signal< sc_lv<1> > n232_reg_485;
    sc_signal< sc_lv<1> > n282_fu_292_p2;
    sc_signal< sc_lv<1> > n282_reg_492;
    sc_signal< sc_lv<1> > n332_fu_328_p2;
    sc_signal< sc_lv<1> > n332_reg_500;
    sc_signal< sc_lv<1> > n382_fu_364_p2;
    sc_signal< sc_lv<1> > n382_reg_507;
    sc_signal< sc_lv<1> > n383_fu_388_p2;
    sc_signal< sc_lv<1> > n383_reg_514;
    sc_signal< sc_lv<1> > tmp_99_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > n30_fu_152_p3;
    sc_signal< sc_lv<1> > n14_fu_104_p3;
    sc_signal< sc_lv<1> > tmp_s_fu_160_p2;
    sc_signal< sc_lv<1> > n20_fu_112_p3;
    sc_signal< sc_lv<1> > tmp_fu_172_p1;
    sc_signal< sc_lv<1> > n4_fu_64_p3;
    sc_signal< sc_lv<1> > p_not_fu_166_p2;
    sc_signal< sc_lv<1> > tmp3_fu_182_p2;
    sc_signal< sc_lv<1> > tmp2_fu_176_p2;
    sc_signal< sc_lv<2> > tmp_98_fu_198_p1;
    sc_signal< sc_lv<2> > tmp_97_fu_194_p1;
    sc_signal< sc_lv<1> > n6_fu_72_p3;
    sc_signal< sc_lv<1> > n43_fu_188_p2;
    sc_signal< sc_lv<1> > tmp4_fu_214_p2;
    sc_signal< sc_lv<1> > n22_fu_120_p3;
    sc_signal< sc_lv<1> > tmp_74_fu_226_p2;
    sc_signal< sc_lv<1> > tmp_75_fu_232_p2;
    sc_signal< sc_lv<1> > tmp_76_fu_238_p2;
    sc_signal< sc_lv<1> > n8_fu_80_p3;
    sc_signal< sc_lv<1> > n183_fu_244_p2;
    sc_signal< sc_lv<1> > tmp5_fu_250_p2;
    sc_signal< sc_lv<1> > n24_fu_128_p3;
    sc_signal< sc_lv<1> > tmp_78_fu_268_p2;
    sc_signal< sc_lv<1> > tmp_79_fu_274_p2;
    sc_signal< sc_lv<1> > tmp_77_fu_262_p2;
    sc_signal< sc_lv<1> > n10_fu_88_p3;
    sc_signal< sc_lv<1> > n233_fu_280_p2;
    sc_signal< sc_lv<1> > tmp6_fu_286_p2;
    sc_signal< sc_lv<1> > n26_fu_136_p3;
    sc_signal< sc_lv<1> > tmp_80_fu_298_p2;
    sc_signal< sc_lv<1> > tmp_81_fu_304_p2;
    sc_signal< sc_lv<1> > tmp_82_fu_310_p2;
    sc_signal< sc_lv<1> > n12_fu_96_p3;
    sc_signal< sc_lv<1> > n283_fu_316_p2;
    sc_signal< sc_lv<1> > tmp7_fu_322_p2;
    sc_signal< sc_lv<1> > n28_fu_144_p3;
    sc_signal< sc_lv<1> > tmp_84_fu_340_p2;
    sc_signal< sc_lv<1> > tmp_85_fu_346_p2;
    sc_signal< sc_lv<1> > tmp_83_fu_334_p2;
    sc_signal< sc_lv<1> > n333_fu_352_p2;
    sc_signal< sc_lv<1> > tmp8_fu_358_p2;
    sc_signal< sc_lv<1> > tmp_86_fu_370_p2;
    sc_signal< sc_lv<1> > tmp_87_fu_376_p2;
    sc_signal< sc_lv<1> > tmp_88_fu_382_p2;
    sc_signal< sc_lv<2> > tmp_165_cast_fu_202_p2;
    sc_signal< sc_lv<32> > tmp23_fu_402_p33;
    sc_signal< sc_lv<9> > tmp_228_cast_fu_447_p1;
    sc_signal< sc_lv<9> > tmp_229_cast_fu_451_p1;
    sc_signal< sc_lv<9> > tmp_89_fu_455_p2;
    sc_signal< sc_lv<32> > c_fu_441_p2;
    sc_signal< sc_lv<32> > tmp_230_cast_fu_461_p1;
    sc_signal< sc_lv<32> > c_1_fu_465_p2;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_100201;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_c_1_fu_465_p2();
    void thread_c_fu_441_p2();
    void thread_n10_fu_88_p3();
    void thread_n12_fu_96_p3();
    void thread_n132_fu_208_p2();
    void thread_n14_fu_104_p3();
    void thread_n182_fu_220_p2();
    void thread_n183_fu_244_p2();
    void thread_n20_fu_112_p3();
    void thread_n22_fu_120_p3();
    void thread_n232_fu_256_p2();
    void thread_n233_fu_280_p2();
    void thread_n24_fu_128_p3();
    void thread_n26_fu_136_p3();
    void thread_n282_fu_292_p2();
    void thread_n283_fu_316_p2();
    void thread_n28_fu_144_p3();
    void thread_n30_fu_152_p3();
    void thread_n332_fu_328_p2();
    void thread_n333_fu_352_p2();
    void thread_n382_fu_364_p2();
    void thread_n383_fu_388_p2();
    void thread_n43_fu_188_p2();
    void thread_n4_fu_64_p3();
    void thread_n6_fu_72_p3();
    void thread_n8_fu_80_p3();
    void thread_p_not_fu_166_p2();
    void thread_tmp23_fu_402_p33();
    void thread_tmp2_fu_176_p2();
    void thread_tmp3_fu_182_p2();
    void thread_tmp4_fu_214_p2();
    void thread_tmp5_fu_250_p2();
    void thread_tmp6_fu_286_p2();
    void thread_tmp7_fu_322_p2();
    void thread_tmp8_fu_358_p2();
    void thread_tmp_165_cast_fu_202_p2();
    void thread_tmp_228_cast_fu_447_p1();
    void thread_tmp_229_cast_fu_451_p1();
    void thread_tmp_230_cast_fu_461_p1();
    void thread_tmp_74_fu_226_p2();
    void thread_tmp_75_fu_232_p2();
    void thread_tmp_76_fu_238_p2();
    void thread_tmp_77_fu_262_p2();
    void thread_tmp_78_fu_268_p2();
    void thread_tmp_79_fu_274_p2();
    void thread_tmp_80_fu_298_p2();
    void thread_tmp_81_fu_304_p2();
    void thread_tmp_82_fu_310_p2();
    void thread_tmp_83_fu_334_p2();
    void thread_tmp_84_fu_340_p2();
    void thread_tmp_85_fu_346_p2();
    void thread_tmp_86_fu_370_p2();
    void thread_tmp_87_fu_376_p2();
    void thread_tmp_88_fu_382_p2();
    void thread_tmp_89_fu_455_p2();
    void thread_tmp_97_fu_194_p1();
    void thread_tmp_98_fu_198_p1();
    void thread_tmp_fu_172_p1();
    void thread_tmp_s_fu_160_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
